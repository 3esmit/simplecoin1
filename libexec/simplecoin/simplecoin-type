#!/usr/bin/env bash
### simplecoin-type -- print information about a collateral type
### Usage: simplecoin type <coin> <type>
set -e

if [[ $1 = @* || ${#1} -ge 40 ]]; then
  coin=$1
else
  coin=$(seth call @simplecoin_factory "coins(uint256)(address)" "$1")
fi

if [[ $coin = 0000000000000000000000000000000000000000 ]]; then
  echo >&2 "${0##*/}: error: no such simplecoin: $1"
  exit 1
fi

if [[ $2 ]]; then
  type=$2
else
  simplecoin type --help >&2
  exit 1
fi

types=$(seth call "$coin" "nextType()(uint)")
types=$(seth --to-dec "$types")

((type >= types)) && { echo "${0##*/}: error: no such type: $type"; exit 1; }

token=$(   seth call "$coin" "token(uint48)(address)" "$type")
vault=$(   seth call "$coin" "vault(uint48)(address)" "$type")
feed=$(    seth call "$coin" "feed(uint48)(uint24)" "$type")
spread=$(  seth call "$coin" "spread(uint48)(uint)" "$type")
ceiling=$( seth call "$coin" "ceiling(uint48)(uint)" "$type")
debt=$(    seth call "$coin" "debt(uint48)(uint)" "$type")

feed=$(    seth --to-dec "$feed")
spread=$(  seth --to-dec "$spread")
ceiling=$( seth --to-dec "$ceiling")
debt=$(    seth --to-dec "$debt")

properties=(
  token
  vault
  feed
  spread
  ceiling
  debt
)

for name in "${properties[@]}"; do
  printf "%-15s\t%s\n" "$name" "${!name}"
done
